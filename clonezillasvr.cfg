
MENU BEGIN 
MENU TITLE Clonezilla Restore Aperio HDD (Server Mode)
MENU LABEL Clonezilla Restore Aperio HDD (Server Mode)
# MENU PASSWD $4$seagate$CQKL5mVWVP+33SPTFsuiIAD9FDw$
# generate SHA-1 password using sha1pass password salt 
# example ~$ sha1pass test seagate
# $4$seagate$v5vu52nrG3a+aisu7BAROT7qJo0$ 
# example ~$ sha1pass aperio seagate
# $4$seagate$cN0tmdRtVvzr6FEkHIUzJHMXpcw$

LABEL return
MENU LABEL Return to main menu ...
MENU EXIT

MENU SEPARATOR

LABEL SERVER Restore Advantech Aperio HDD
MENU LABEL SERVER Restore Advantech Aperio HDD
LINUX /clonezillasvr/livesvr/vmlinuz
INITRD /clonezillasvr/livesvr/initrd.img
APPEND boot=live union=overlay hostname=aperiorecovery config components noswap edd=on nomodeset locales=en_US.UTF-8 keyboard-layouts=en quickreboot ocs_prerun="sudo bash /lib/live/mount/medium/scripts/UsbFsck" ocs_prerun1="sudo bash /lib/live/mount/medium/scripts/preserverscript Advantech" ocs_prerun2="mount --bind -o noatime,nodiratime /APramdisk /home/partimag" ocs_prerun3="sudo cp /lib/live/mount/medium/scripts/prerunscript /tftpboot/nbi_img/" ocs_prerun4="sudo cp /lib/live/mount/medium/scripts/postrunscript /tftpboot/nbi_img/" ocs_prerun5="sudo cp /lib/live/mount/medium/scripts/ocs-live-feed-img_syah /usr/sbin/ocs-live-feed-img" ocs_live_run="ocs-live-feed-img -v -cbm netboot -dm auto-detect -lscm massive-deployment -mdst from-image -e1 auto -e2 -x -v -r -icds -j1 -j2 -sc0 -sc -scr -p reboot -md multicast --clients-to-wait ask_user --max-time-to-wait 1800 start ask_user sda1 sda2" ocs_live_extra_param='' ocs_live_batch='no' vga=788 ip= nosplash hpet=disable noapic nolapic irqpoll bootfrom=/dev/sdb1 live-media-path=livesvr toram=clonezillasvr/livesvr,clonezillasvr/utils,clonezillasvr/EFI,clonezillasvr/syslinux,clonezillasvr/boot,clonezillasvr/home,clonezillasvr/.disk,clonezilla/scripts
TEXT HELP
MASS Restore the Advantech Aperio's Hard Drive thru server multicast
ENDTEXT
# toram=clonezillasvr/live,clonezillasvr/syslinux,clonezilla/scripts
# net.ifnames=0 i915.blacklist=yes radeonhd.blacklist=yes nouveau.blacklist=yes vmwgfx.enable_fbdev=1 live-netdev="enp1s0" --mcast-iface enp1s0
# Preserverscript is to load hdd images to ram so Thumbdrive can be freed to be used to boot clients

LABEL SERVER Restore Portwell Aperio HDD
MENU LABEL SERVER Restore Portwell Aperio HDD
LINUX /clonezillasvr/livesvr/vmlinuz
INITRD /clonezillasvr/livesvr/initrd.img
APPEND boot=live union=overlay hostname=aperiorecovery config components noswap edd=on nomodeset locales=en_US.UTF-8 keyboard-layouts=en quickreboot ocs_prerun="sudo bash /lib/live/mount/medium/scripts/UsbFsck" ocs_prerun1="sudo bash /lib/live/mount/medium/scripts/preserverscript Portwell" ocs_prerun2="mount --bind -o noatime,nodiratime /APramdisk /home/partimag" ocs_prerun3="sudo cp /lib/live/mount/medium/scripts/prerunscript /tftpboot/nbi_img/" ocs_prerun4="sudo cp /lib/live/mount/medium/scripts/postrunscript /tftpboot/nbi_img/" ocs_prerun5="sudo cp /lib/live/mount/medium/scripts/ocs-live-feed-img_syah /usr/sbin/ocs-live-feed-img" ocs_live_run="ocs-live-feed-img -v -cbm netboot -dm auto-detect -lscm massive-deployment -mdst from-image -e1 auto -e2 -x -r -icds -j1 -j2 -sc0 -sc -scr -p reboot -md multicast --clients-to-wait ask_user --max-time-to-wait 1800 start ask_user sda1 sda2" ocs_live_extra_param='' ocs_live_batch='no' vga=788 ip= nosplash hpet=disable noapic nolapic irqpoll bootfrom=/dev/sdb1 live-media-path=livesvr toram=clonezillasvr/livesvr,clonezillasvr/utils,clonezillasvr/EFI,clonezillasvr/syslinux,clonezillasvr/boot,clonezillasvr/home,clonezillasvr/.disk,clonezilla/scripts
TEXT HELP
MASS Restore the Portwell Aperio's Hard Drive thru server multicast
ENDTEXT
# Preserverscript is to load hdd images to ram so Thumbdrive can be freed to be used to boot clients

LABEL SERVER Restore Backup Aperio HDD
MENU LABEL SERVER Restore Backup Aperio HDD
LINUX /clonezillasvr/livesvr/vmlinuz
INITRD /clonezillasvr/livesvr/initrd.img
APPEND boot=live union=overlay hostname=aperiorecovery config components noswap edd=on nomodeset locales=en_US.UTF-8 keyboard-layouts=en quickreboot ocs_prerun="sudo bash /lib/live/mount/medium/scripts/UsbFsck" ocs_prerun1="sudo bash /lib/live/mount/medium/scripts/preserverscript Custom" ocs_prerun2="mount --bind -o noatime,nodiratime /APramdisk /home/partimag" ocs_prerun3="sudo cp /lib/live/mount/medium/scripts/prerunscript /tftpboot/nbi_img/" ocs_prerun4="sudo cp /lib/live/mount/medium/scripts/postrunscript /tftpboot/nbi_img/" ocs_prerun5="sudo cp /lib/live/mount/medium/scripts/ocs-live-feed-img_syah /usr/sbin/ocs-live-feed-img" ocs_live_run="ocs-live-feed-img -v -cbm netboot -dm auto-detect -lscm massive-deployment -mdst from-image -e1 auto -e2 -x -r -icds -j1 -j2 -sc0 -sc -scr -p reboot -md multicast --clients-to-wait ask_user --max-time-to-wait 1800 start ask_user sda1 sda2" ocs_live_extra_param='' ocs_live_batch='no' vga=788 ip= nosplash hpet=disable noapic nolapic irqpoll bootfrom=/dev/sdb1 live-media-path=livesvr toram=clonezillasvr/livesvr,clonezillasvr/utils,clonezillasvr/EFI,clonezillasvr/syslinux,clonezillasvr/boot,clonezillasvr/home,clonezillasvr/.disk,clonezilla/scripts
# Preserverscript is to load hdd images to ram so Thumbdrive can be freed to be used to boot clients
# use-existing-dhcpd
TEXT HELP
MASS Restore the Backup Clone Aperio's Hard Drive thru server multicast
ENDTEXT

#~ Backup Label SERVER Restore Backup Aperio HDD
#~ LABEL SERVER Restore Backup Aperio HDD
#~ MENU LABEL SERVER Restore Backup Aperio HDD
#~ LINUX /clonezillasvr/live/vmlinuz
#~ INITRD /clonezillasvr/live/initrd.img
#~ APPEND boot=live union=overlay hostname=aperiorecovery config components noswap edd=on nomodeset locales=en_US.UTF-8 keyboard-layouts=en ocs_prerun="mount /dev/sdb3 /mnt" ocs_prerun1="mount --bind -o noatime,nodiratime /mnt/backup/CloneRestore /home/partimag" ocs_prerun2="sudo cp /mnt/clonezilla/scripts/prerunscript /tftpboot/nbi_img/" ocs_prerun3="sudo cp /mnt/clonezilla/scripts/postrunscript /tftpboot/nbi_img/" ocs_prerun4="sudo cp /mnt/clonezilla/scripts/ocs-live-feed-img_syah /usr/sbin/ocs-live-feed-img" ocs_live_run="ocs-live-feed-img -v -cbm netboot -dm auto-detect -e1 auto -e2 -x -r -icds -j1 -j2 -sc0 -sc -scr -p reboot -md multicast --time-to-wait 120 --clients-to-wait 17 --max-time-to-wait 120 start ask_user sda1 sda2" ocs_live_extra_param='' ocs_live_batch='no' vga=788 ip= nosplash hpet=disable noapic nolapic irqpoll bootfrom=/dev/sdb1 live-media-path=/live toram=clonezillasvr/live,clonezillasvr/syslinux
#~ #-dm auto-detect 
#~ TEXT HELP
#~ MASS Restore the Backup Clone Aperio's Hard Drive thru server multicast
#~ ENDTEXT

# Ori Label
#~ LABEL SERVER Restore Backup Aperio HDD
#~ MENU LABEL SERVER Restore Backup Aperio HDD
#~ LINUX /clonezillasvr/live/vmlinuz
#~ INITRD /clonezillasvr/live/initrd.img
#~ APPEND boot=live union=overlay hostname=aperiorecovery config components noswap edd=on nomodeset locales=en_US.UTF-8 keyboard-layouts=en ocs_prerun="mount /dev/sdb1 /mnt" ocs_prerun1="mount --bind -o noatime,nodiratime /mnt/backup/CloneRestore /home/partimag" ocs_prerun2="sudo cp /mnt/clonezilla/scripts/prerunscript /tftpboot/nbi_img/" ocs_prerun3="sudo cp /mnt/clonezilla/scripts/postrunscript /tftpboot/nbi_img/" ocs_prerun4="sudo cp /mnt/clonezilla/scripts/ocs-live-feed-img_syah /usr/sbin/ocs-live-feed-img" ocs_live_run="ocs-live-feed-img -v -cbm netboot -dm auto-detect -e1 auto -e2 -x -r -icds -j1 -j2 -sc0 -sc -scr -p reboot -md multicast --time-to-wait 120 --clients-to-wait 17 --max-time-to-wait 120 start ask_user sda1 sda2" ocs_live_extra_param='' ocs_live_batch='no' vga=788 ip= nosplash hpet=disable noapic nolapic irqpoll bootfrom=/dev/sdb1 live-media-path=/live toram=clonezillasvr/live,clonezillasvr/syslinux
#~ #-dm auto-detect 
#~ TEXT HELP
#~ MASS Restore the Backup Clone Aperio's Hard Drive thru server multicast
#~ ENDTEXT

#----------------------------------------------------Sample Server Menuentry---------------------------------------------------------------
#LABEL clonezillasvr Lite Server
#MENU LABEL clonezillasvr Lite Server (working)
#LINUX /clonezillasvr/live/vmlinuz
#INITRD /clonezillasvr/live/initrd.img
#APPEND boot=live union=overlay hostname=aperiorecovery config components noswap edd=on nomodeset locales=en_US.UTF-8 keyboard-layouts=en ocs_prerun="mount /dev/sdb1 /mnt" ocs_prerun1="mount --bind -o noatime,noidratime /mnt/#backup/Advantech /home/partimag" ocs_live_run="ocs-live-feed-img -cbm netboot -dm auto-detect -e1 auto -e2 -x -t -r -j2 -p choose -md broadcast --time-to-wait 15 start ask_user sda1 sda2" ocs_live_extra_param="" #ocs_live_batch="no" vga=788 ip= nosplash toram=clonezillasvr/live,clonezillasvr/syslinux net.ifnames=0 i915.blacklist=yes radeonhd.blacklist=yes nouveau.blacklist=yes vmwgfx.enable_fbdev=1
#TEXT HELP
#Backup Clone the Aperio's Hard Drive from Server thru PXE boot
# ocs_live_run="ocs-live-general"
# ocs_repository="dev:///dev/sdb1"
#ENDTEXT
#----------------------------------------------------End of Sample Server Menuentry--------------------------------------------------------


MENU END

#~ parse_ocs_live_feed_img_cmd_options_with_dash() { 
  #~ n_shift=0
  #~ #
  #~ while [ $# -gt 0 ]; do
   #~ case "$1" in
      #~ -p|--postaction)  
	    #~ shift; n_shift=$((n_shift+1))
            #~ if [ -z "$(echo $1 |grep ^-.)" ]; then
              #~ # skip the -xx option, in case 
              #~ postaction="$1"
	      #~ shift; n_shift=$((n_shift+1))
            #~ fi
            #~ OCS_OPT="$OCS_OPT -p $postaction"
            #~ ;;
      #~ -g|--grub-install)  
            #~ install_grub="on"
  	    #~ shift; n_shift=$((n_shift+1))
            #~ # skip the -xx option, in case 
            #~ if [ -z "$(echo $1 |grep ^-.)" ]; then
              #~ grub_partition=$1
  	    #~ shift; n_shift=$((n_shift+1))
            #~ fi
            #~ [ -z "$grub_partition" ] && USAGE && exit 1
  	    #~ OCS_OPT="$OCS_OPT -g $grub_partition"
            #~ ;;
      #~ -a|--no-force-dma-on)  
  	    #~ OCS_OPT="$OCS_OPT --no-force-dma-on"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -k|--no-fdisk|--no-create-partition)  
  	    #~ create_part="no"
  	    #~ OCS_OPT="$OCS_OPT -k"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -k1|--fdisk-proportion)  
  	    #~ create_part="yes"
  	    #~ create_part_type="proportion"
  	    #~ OCS_OPT="$OCS_OPT -k1"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -k2|--fdisk-manual)  
  	    #~ create_part="yes"
  	    #~ create_part_type="manual"
  	    #~ OCS_OPT="$OCS_OPT -k2"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -t|--no-restore-mbr)  
  	    #~ restore_mbr="no"
  	    #~ OCS_OPT="$OCS_OPT -t"
              #~ shift; n_shift=$((n_shift+1));;
      #~ -t1|--restore-raw-mbr)  
              #~ # The flag to restore syslinux mbr.bin to M$ windows system.
  	    #~ restore_prebuild_mbr="yes"
  	    #~ OCS_OPT="$OCS_OPT -t1"
              #~ shift; n_shift=$((n_shift+1));;
      #~ -t2|--no-restore-ebr)  
  	    #~ restore_ebr="no"
  	    #~ OCS_OPT="$OCS_OPT -t2"
              #~ shift; n_shift=$((n_shift+1));;
      #~ -e|--load-geometry)
  	    #~ OCS_OPT="$OCS_OPT -e"
              #~ shift; n_shift=$((n_shift+1));;
      #~ -e1|--change-geometry)  
              #~ change_ntfs_boot_chs="on"
              #~ shift; n_shift=$((n_shift+1))
              #~ # skip the -xx option, in case 
              #~ if [ -z "$(echo $1 |grep ^-.)" ]; then
                #~ ntfs_boot_partition=$1
                #~ shift; n_shift=$((n_shift+1))
              #~ fi
              #~ [ -z "$ntfs_boot_partition" ] && USAGE && exit 1
  	    #~ OCS_OPT="$OCS_OPT -e1 $ntfs_boot_partition"
              #~ ;;
      #~ -e2|--load-geometry-from-edd)
  	    #~ OCS_OPT="$OCS_OPT -e2"
              #~ shift; n_shift=$((n_shift+1));;
      #~ -c|--confirm)
  	    #~ OCS_OPT="$OCS_OPT -c"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -w|--wait-time)
              #~ shift; n_shift=$((n_shift+1))
              #~ if [ -z "$(echo $1 |grep ^-.)" ]; then
                #~ # skip the -xx option, in case 
  	      #~ TIME_to_wait="$1"
  	      #~ OCS_OPT="$OCS_OPT -w $TIME_to_wait"
                #~ shift; n_shift=$((n_shift+1))
              #~ fi
  	    #~ ;;
      #~ -s|--skip-hw-detect)
              #~ hw_detect="off"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ --debug=?*)
            #~ debug_level=${1#--debug=}
  	    #~ OCS_OPT="$OCS_OPT --debug=$debug_level"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -b|--batch)
            #~ # Here we append --batch to OCS_OPT instead of -b, (it will confuse init, sinice -b for init is emergency mode)
            #~ ocs_batch_mode="on"
  	    #~ OCS_OPT="$OCS_OPT --batch"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -d|--debug-mode)
            #~ debug_mode="on"
  	    #~ OCS_OPT="$OCS_OPT -d"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -d0|--dialog)   DIA="dialog"; shift; n_shift=$((n_shift+1));;
      #~ -d1|--Xdialog)  DIA="Xdialog"; shift; n_shift=$((n_shift+1));;
      #~ -d2|--whiptail) DIA="whiptail"; shift; n_shift=$((n_shift+1));;
      #~ -d3|--gdialog)  DIA="gdialog"; shift; n_shift=$((n_shift+1));;
      #~ -d4|--kdialog)  DIA="kdialog"; shift; n_shift=$((n_shift+1));;
      #~ -r|--resize-partition)
  	    #~ OCS_OPT="$OCS_OPT -r"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -v|--verbose)
  	    #~ verbose="on"
  	    #~ OCS_OPT="$OCS_OPT -v"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -nogui|--nogui)
            #~ # -nogui is for backward compatable, better to use --nogui
            #~ OCS_OPT="$OCS_OPT --nogui"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -rm-win-swap-hib|--rm-win-swap-hib)
            #~ # Remove page and hibernation files in M$ windows
            #~ OCS_OPT="$OCS_OPT --rm-win-swap-hib"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -rescue|--rescue)
            #~ OCS_OPT="$OCS_OPT --rescue"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -mp|--mount-point)
            #~ shift; 
            #~ if [ -z "$(echo $1 |grep ^-.)" ]; then
              #~ # skip the -xx option, in case 
              #~ mount_point=$1
  	    #~ shift; n_shift=$((n_shift+1))
            #~ fi
            #~ [ -z "$mount_point" ] && USAGE && exit 1
  	    #~ OCS_OPT="$OCS_OPT --mount-point $mount_point" ; 
  	    #~ ;;
      #~ --time-to-wait)
  	    #~ shift; n_shift=$((n_shift+1))
            #~ if [ -z "$(echo $1 |grep ^-.)" ]; then
              #~ # skip the -xx option, in case 
  	    #~ mcast_wait_time="$1"
  	    #~ shift; n_shift=$((n_shift+1))
            #~ fi
  	    #~ ;;
      #~ --clients-to-wait)
  	    #~ shift; n_shift=$((n_shift+1))
              #~ if [ -z "$(echo $1 |grep ^-.)" ]; then
                #~ # skip the -xx option, in case 
  	      #~ n_clients="$1"
  	      #~ shift; n_shift=$((n_shift+1))
              #~ fi
  	    #~ ;;
      #~ --max-time-to-wait)
  	    #~ shift; n_shift=$((n_shift+1))
            #~ if [ -z "$(echo $1 |grep ^-.)" ]; then
              #~ # skip the -xx option, in case 
  	    #~ mcast_max_wait_time="$1"
  	    #~ shift; n_shift=$((n_shift+1))
            #~ fi
            #~ [ -z "$mcast_max_wait_time" ] && USAGE && exit 1
  	    #~ # Client need to know the --max-time-to-wait so that when sleeping
  	    #~ # between partitions restoring clone won't timeout.
            #~ OCS_OPT="$OCS_OPT --max-time-to-wait $mcast_max_wait_time"
  	    #~ ;;
      #~ -x|--full-duplex)
            #~ udp_sender_extra_opt="$udp_sender_extra_opt --full-duplex"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -brdcst|--broadcast)
            #~ udp_sender_extra_opt="$udp_sender_extra_opt --broadcast"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -j|--create-part-by-sfdisk)
            #~ # We leave this option for backward compatability.
  	    #~ OCS_OPT="$OCS_OPT --create-part-by-sfdisk"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -j0|--create-part-by-dd)
  	    #~ OCS_OPT="$OCS_OPT --create-part-by-dd"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -j1|--dump-mbr-in-the-end)
  	    #~ OCS_OPT="$OCS_OPT --dump-mbr-in-the-end"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -j2|--clone-hidden-data)
  	    #~ OCS_OPT="$OCS_OPT --clone-hidden-data"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -icrc|--icrc)
  	    #~ OCS_OPT="$OCS_OPT --icrc"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -irvd|--irvd)
  	    #~ OCS_OPT="$OCS_OPT --irvd"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -irhr|--irhr)
  	    #~ OCS_OPT="$OCS_OPT --irhr"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -ius|--ius)
  	    #~ OCS_OPT="$OCS_OPT --ius"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -icds|--ignore-chk-dsk-size-pt)
  	    #~ OCS_OPT="$OCS_OPT --ignore-chk-dsk-size-pt"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -iefi|--ignore-update-efi-nvram)
  	    #~ OCS_OPT="$OCS_OPT --ignore-update-efi-nvram"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -srel|--save-restore-error-log)
  	    #~ OCS_OPT="$OCS_OPT --save-restore-error-log"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -hn0)
  	    #~ shift; n_shift=$((n_shift+1))
            #~ change_win_hostname="By_IP"
            #~ if [ -z "$(echo $1 |grep ^-.)" ]; then
              #~ # skip the -xx option, in case 
  	    #~ win_hostname_prefix="$1"
  	    #~ shift; n_shift=$((n_shift+1))
            #~ fi
            #~ [ -z "$win_hostname_prefix" ] && USAGE && exit 1
            #~ OCS_OPT="$OCS_OPT -hn0 $win_hostname_prefix"
  	    #~ ;;
      #~ -hn1)
  	    #~ shift; n_shift=$((n_shift+1))
            #~ change_win_hostname="By_MAC"
            #~ if [ -z "$(echo $1 |grep ^-.)" ]; then
              #~ # skip the -xx option, in case 
  	    #~ win_hostname_prefix="$1"
  	    #~ shift; n_shift=$((n_shift+1))
            #~ fi
            #~ [ -z "$win_hostname_prefix" ] && USAGE && exit 1
            #~ OCS_OPT="$OCS_OPT -hn1 $win_hostname_prefix"
  	    #~ ;;
      #~ -o|-o1|--run-postrun-dir) 
              #~ # -o is for backward compatability
  	    #~ run_postrun_dir="yes"
  	    #~ OCS_OPT="$OCS_OPT --run-postrun-dir"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -o0|--run-prerun-dir) 
  	    #~ run_prerun_dir="yes"
  	    #~ OCS_OPT="$OCS_OPT --run-prerun-dir"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -ns|--ntfs-progress-in-image-dir)
  	    #~ OCS_OPT="$OCS_OPT --ntfs-progress-in-image-dir"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -cm|--check-md5sum)
  	    #~ check_md5sum="yes"
  	    #~ OCS_OPT="$OCS_OPT -cm"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -cs|--check-sha1sum)
  	    #~ check_sha1sum="yes"
  	    #~ OCS_OPT="$OCS_OPT -cs"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -cmf|--chk-chksum-for-files-in-dev)
  	    #~ chk_chksum_for_files_in_dev="yes"
  	    #~ OCS_OPT="$OCS_OPT -cmf"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ --mcast-iface)
  	    #~ shift; n_shift=$((n_shift+1))
              #~ if [ -z "$(echo $1 |grep ^-.)" ]; then
                #~ # skip the -xx option, in case 
  	      #~ eth_for_multicast="$1"
  	      #~ shift; n_shift=$((n_shift+1))
              #~ fi
              #~ [ -z "$eth_for_multicast" ] && USAGE && exit 1
  	    #~ ;;
      #~ -um|--user-mode)
            #~ shift; n_shift=$((n_shift+1))
            #~ # skip the -xx option, in case 
            #~ if [ -z "$(echo $1 |grep ^-.)" ]; then
              #~ ocs_user_mode="$1"
              #~ shift; n_shift=$((n_shift+1))
            #~ fi
            #~ [ -z "$ocs_user_mode" ] && USAGE && exit 1
	    #~ # There is no need to pass user mode because it's already in batch mode.
  	    #~ # XXXXXX OCS_OPT="$OCS_OPT -um $ocs_user_mode"
  	    #~ ;;
      #~ -sc0|--skip-check-restorable-on-srv)
            #~ # flag to check if the image is restorable on clonezilla server
  	    #~ chk_img_restoreable_on_srv="no"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -sc|-scs|--skip-check-restorable|--skip-check-restorable-s)
            #~ # flag to check if the image is restorable
  	    #~ chk_img_restoreable_mod_save="no"
  	    #~ OCS_OPT="$OCS_OPT -scs"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -scr|--skip-check-restorable-r)
            #~ # Flag to check if the image is restorable
  	    #~ chk_img_restoreable_mod_restore="no"
  	    #~ OCS_OPT="$OCS_OPT -scr"
  	    #~ shift; n_shift=$((n_shift+1));;
      #~ -md|--massive-deploy-mode)
            #~ shift; n_shift=$((n_shift+1))
            #~ # skip the -xx option, in case 
            #~ if [ -z "$(echo $1 |grep ^-.)" ]; then
              #~ massive_deploy_mode="$1"
              #~ shift; n_shift=$((n_shift+1))
            #~ fi
            #~ [ -z "$massive_deploy_mode" ] && USAGE && exit 1
	    #~ # //NOTE// Do not pass -md option to OCS_OPT here.
	    #~ # OCS_OPT is for ocs-sr, not for ocs-live-feed-img
  	    #~ # XXXXXX OCS_OPT="$OCS_OPT -md $massive_deploy_mode"
  	    #~ ;;
      #~ -dm|--dhcpd-mode)
            #~ shift; n_shift=$((n_shift+1))
            #~ # skip the -xx option, in case 
            #~ if [ -z "$(echo $1 |grep ^-.)" ]; then
              #~ ocs_litesrv_netmode="$1"
              #~ shift; n_shift=$((n_shift+1))
            #~ fi
            #~ [ -z "$ocs_litesrv_netmode" ] && USAGE && exit 1
	    #~ # //NOTE// Do not pass -md option to OCS_OPT here.
	    #~ # OCS_OPT is for ocs-sr, not for ocs-live-feed-img
  	    #~ # XXXXXX OCS_OPT="$OCS_OPT -dm $ocs_litesrv_netmode"
  	    #~ ;;
      #~ -cbm|--client-boot-mode)
            #~ shift; n_shift=$((n_shift+1))
            #~ # skip the -xx option, in case 
            #~ if [ -z "$(echo $1 |grep ^-.)" ]; then
              #~ client_boot_mode="$1"
              #~ shift; n_shift=$((n_shift+1))
            #~ fi
            #~ [ -z "$client_boot_mode" ] && USAGE && exit 1
	    #~ # //NOTE// Do not pass -cbm option to OCS_OPT here.
	    #~ # OCS_OPT is for ocs-sr, not for ocs-live-feed-img
  	    #~ # XXXXXX OCS_OPT="$OCS_OPT -cbm $client_boot_mode"
  	    #~ ;;
      #~ -*)   echo "${0}: ${1}: invalid option" >&2
            #~ USAGE >& 2
            #~ exit 2 ;;
       #~ *)   break ;;
   #~ esac
  #~ done
#~ } # end of parse_ocs_live_feed_img_cmd_options_with_dash
